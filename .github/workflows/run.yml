name: schedule

on:
  push:
  pull_request:
    branches: [main gh-pages]
  schedule:
    #   分 时 日 月 周
    - cron: "* */10 * * *"
  repository_dispatch:
    types:
      - webhook-1
      - webhook-2
  workflow_dispatch:
#   fork:
#     branches: [main gh-pages]
#   label:
#     types:
#       - created
#   issues:
#     types:
#       - opened
#       - labeled
#   page_build:
#     branches: [main gh-pages]
#   workflow_run:
#     workflows: ["Build"]
#     types: [requested]
#     # branches-ignore:
#     #   - "canary"
#   workflow_dispatch:
#     inputs:
#       logLevel:
#         description: "Log level"
#         required: true
#         default: "warning"
#         type: choice
#         options:
#           - info
#           - warning
#           - debug
#       print_tags:
#         description: "True to print to STDOUT"
#         required: true
#         type: boolean
#       tags:
#         description: "Test scenario tags"
#         required: true
#         type: string
#       environment:
#         description: "Environment to run tests against"
#         type: environment
#         required: true

jobs:
  build:
    runs-on: ubuntu-latest
    if: "!startsWith(github.event.head_commit.message, 'GitHubAction')"
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: "11"
          distribution: "adopt"
        # https://docs.github.com/cn/actions/learn-github-actions/environment-variables
        env:
          GITHUB_TOKEN: "${{ secrets.GTOKEN }}"
          GITHUB_TOKEN1: "${{ secrets.GTOKEN }}"

      - name: Build with Maven
        shell: bash
        continue-on-error: true
        run: |
          git clone https://oauth2:${{ secrets.GTOKEN }}@github.com/parserpp/githubIcp.git ../githubIcp
          echo  "克隆成功......"
          cd ../githubIcp
          ls
          chmod -R 777 *
          git config core.filemode false
          #echo "准备开始编译～～～～"
          #mvn compile assembly:single  -Dmaven.test.skip=true
          #echo "-------------------------------------------------------------"
          #echo "----------------------[编译完成,即将运行]----------------------"
          #echo "-------------------------------------------------------------"
          #ls target/
          tree
          java -Xms2g  -Xmx2g  -Xmn1g  -XX:MetaspaceSize=512m  -XX:MaxMetaspaceSize=512m  -XX:MaxDirectMemorySize=1g -Dfile.encoding=UTF-8 -jar  ./releases/githubIcp-1.0-SNAPSHOT-jar-with-dependencies.jar
          echo "-------------------------------------------------------------"
          echo "----------------------[运行完成]----------------------"
          echo "-------------------------------------------------------------"
          d=$(date "+%Y-%m-%d %H:%M:%S")
          echo "---------$d--------">>info.txt
          echo "[公司] ❌:$(wc -l icp/info/company_failed.txt | awk '{print $1}') ✅:$(wc -l icp/info/company_pos.txt| awk '{print $1}' )">>info.txt
          echo "[公司] $(wc -l icp/info/company_res.txt| awk '{print $1}' )">>info.txt
          echo "[域名]❌:$(wc -l icp/info/domain_failed.txt| awk '{print $1}') ✅:$(wc -l icp/info/domain_pos.txt| awk '{print $1}')">>info.txt
          echo "[域名] $(wc -l icp/info/domain_res.txt| awk '{print $1}')">>info.txt

          git config --global user.name "GithubAction"
          git config --global user.email "sanbo.xyz@gmail.com"
          git add .
          git commit -am "GitHubAction: triggle by commit ${{ github.sha }}. created by ${{ github.workflow }}." -a
          git push

      - name: ls_and_see_diff
        shell: bash
        continue-on-error: true
        run: |
          ls
          git status

      - name: commit_2server
        shell: bash
        continue-on-error: true
        run: |
          
